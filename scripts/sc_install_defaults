#!/QOpenSys/pkgs/bin/bash
TARGET_DIR="$HOME/.sc/services"
mkdir -p $TARGET_DIR
function print_usage {
    echo "usage: sc_install_defaults [options]"
    echo ""
    echo "    valid options include:"
    echo "        -h            : display help"
    echo "        --apache      : autocreate from apache instances (default)"
    echo "        --iws         : autocreate from IWS instances (default)"
    echo "        --cleanupv0   : clean up files created by v0 (default)"
    echo "        --cleanup     : clean up previously-generated configs (default)"
    echo "        --noapache    : don't autocreate from apache instances"
    echo "        --noiws       : don't autocreate from IWS instances"
    echo "        --nocleanupv0 : don't clean up files created by v0"
    echo "        --nocleanup   : don't clean up previously-generated configs"
    echo "        --global      : install for all users"
    echo "        --user        : install for current user (default)"
    echo ""
    echo "   NOTE: The current version of this tool only installs apache configs"
    echo ""
    exit 0
}
function cleanup_v0 {
    echo "Cleaning up v0 files..."
    for VZERO in as-central.yaml as-database.yaml as-dtaq.yaml as-file.yaml as-netprt.yaml as-rmtcmd.yaml as-signon.yaml as-svrmap.yaml as-central-s.yaml as-database-s.yaml as-dtaq-s.yaml as-file-s.yaml as-netprt-s.yaml as-rmtcmd-s.yaml as-signon-s.yaml ddm.yaml directoryserver.yaml ftp.yaml netserver.yaml sshd.yaml telnet.yaml system_tcpsvr_secure ddm-ssl.yaml directoryserver-ssl.yaml telnet-ssl.yaml navigator.yaml
    do
        rm -f $HOME/.sc/services/$VZERO
    done
}
function cleanup {
    echo "Cleaning up previously installed configurations..."
    for OLDCONFIG in $(sc -q list group:autogenerated | awk '{print $1}')
    do
        echo "  cleaning up previously-installed configuration $OLDCONFIG..."
        rm $(sc -q file $OLDCONFIG)
    done
}


function install_iws {
    echo "installing Integrated Web Services (IWS) server $1..."
    IWS_PROPS=$(qsh -c "JAVA_TOOL_OPTIONS=-Dos400.stdio.convert=N /qibm/proddata/os/webservices/bin/getWebServicesServerProperties.sh -server $1")
    SUBSYSTEM=$(echo "$IWS_PROPS" | grep -i subsystem | sed 's|.*:||' | sed 's| ||g')
    JOB=$(echo "$IWS_PROPS" | grep -i 'Job name' | sed 's|.*:||' | sed 's| ||g')
    PORTS=$(echo "$IWS_PROPS" | grep -i 'Application server ports' | sed 's|.*:||' | sed 's| ||g'| sed 's|;|,|g')
    HTTPSVR=$(echo "$IWS_PROPS" | grep -i 'HTTP server name' | sed 's|.*:||' | sed 's| ||g'| sed 's|;|,|g')
    # echo "Subsystem is $SUBSYSTEM"
    # echo "job is $JOB"
    # echo "ports are $PORTS"
    JOB_CRITERIA="$SUBSYSTEM/$JOB"
    if [ "" == "$SUBSYSTEM" ]; then
        if [ "" == "$PORTS" ]; then
            echo "OOPS"'!!'" Could not determine attributes for IWS server $1"
            exit 1
        fi
        JOB_CRITERIA="$JOB"
    fi
    YAMLFILE="$TARGET_DIR/iws_$(echo "$1" | awk '{ print tolower($0) }').yaml"
    echo "name: Integrated Web Services server $1" > $YAMLFILE
    echo "start_cmd: /usr/bin/qsh -c \"JAVA_TOOL_OPTIONS=-Dos400.stdio.convert=N /qibm/proddata/os/webservices/bin/startWebServicesServer.sh -server $1\"" >> $YAMLFILE
    echo "stop_cmd: /usr/bin/qsh -c \"JAVA_TOOL_OPTIONS=-Dos400.stdio.convert=N /qibm/proddata/os/webservices/bin/stopWebServicesServer.sh -server $1\"" >> $YAMLFILE
    echo "check_alive: $JOB,$PORTS" >> $YAMLFILE
    echo "groups:" >> $YAMLFILE
    echo ' - "iws"' >> $YAMLFILE
    echo ' - "autogenerated"' >> $YAMLFILE

    if [ "" != "$HTTPSVR" ]; then
        DEP_SVC="apache_$HTTPSVR"
        if [ "" != "$(sc file $DEP_SVC)" ]; then
            echo "service_dependencies:" >> $YAMLFILE
            echo " - $DEP_SVC" >> $YAMLFILE
            echo "added dependency on $DEP_SVC"
        fi
    fi
}

function install_apache {
    APACHENAME=$(echo $1 | sed 's|\..*||g' | awk '{ print tolower($0) }')

    echo "installing apache server $APACHENAME"

    APACHEDIR=$(/usr/bin/Rfile -r $1 | head -n 1 | sed 's|.*-d ||g' | sed 's| .*||g')
    if [[ ! -d "$APACHEDIR" ]]; then
        echo "OOPS"'!!'" Could not find Apache directory $APACHEDIR..."
        return
    fi
    APACHEFILE=$APACHEDIR/$(/usr/bin/Rfile -r $1 | head -n 1 | sed 's|.*-f ||g' | sed 's| .*||g')
    if [[ ! -f "$APACHEFILE" ]]; then
        echo "OOPS"'!!'" Could not find Apache configuration file $APACHEFILE..."
        return
    fi

    PORT=$(grep -iE '^Listen ' $APACHEFILE |  sed 's|.*:||g' | tail -n 1 | tr -cd '[0-9]')
    if [[ "" == "$PORT" ]]; then
        echo "OOPS"'!!'" Not an Apache server here..."
        return
    fi
        for VHOSTPORT in $(grep -iE '^Listen ' $(dirname $APACHEFILE)/vhosts/*.conf 2>/dev/null |  sed 's|.*:||g' | sed 's|\r$||g'  )
        do
            PORT="$PORT,$VHOSTPORT"
        done
        YAMLFILE="$TARGET_DIR/apache_$APACHENAME.yaml"
        echo "name: Apache server $APACHENAME" > $YAMLFILE
        echo "start_cmd: system \"STRTCPSVR SERVER(*HTTP) HTTPSVR($APACHENAME)\"" >> $YAMLFILE
        echo "stop_cmd: system \"ENDTCPSVR SERVER(*HTTP) HTTPSVR($APACHENAME)\"" >> $YAMLFILE
        echo "check_alive: $PORT" >> $YAMLFILE
        echo "groups:" >> $YAMLFILE
        echo ' - "apache"' >> $YAMLFILE
        echo ' - "autogenerated"' >> $YAMLFILE
}

DO_CLEANUPV0="1"
DO_CLEANUP="1"
DO_APACHE="1"
DO_IWS="1"
for i in "$@"; do
    case $i in
    -h|--help)
        print_usage
        ;;
    --apache)
        DO_APACHE="1"
        ;;
    --iws)
        DO_IWS="1"
        ;;
    --cleanupv0)
        DO_CLEANUPV0="1"
        ;;
    --cleanup)
        DO_CLEANUP="1"
        DO_CLEANUPV0="1"
        ;;
    --noapache)
        DO_APACHE="0"
        ;;
    --noiws)
        DO_IWS="0"
        ;;
    --nocleanupv0)
        DO_CLEANUPV0="0"
        ;;
    --nocleanup)
        DO_CLEANUP="0"
        ;;
    --global)
        TARGET_DIR="/QOpenSys/etc/sc/services"
        ;;
    --user)
        TARGET_DIR="$HOME/.sc/services"
        ;;
    *)
        # unknown option
        exec 1>&2
        echo "Unknown option: $i"
        print_usage
        ;;
    esac
done
if [ "1" == "$DO_CLEANUPV0" ]; then
    cleanup_v0
fi
if [ "1" == "$DO_CLEANUP" ]; then
    cleanup
fi


if [ "1" == "$DO_APACHE" ]; then
    cd /qsys.lib/qusrsys.lib/qatmhinstc.file
    for APACHE in $(ls *.MBR)
    do
        install_apache $APACHE
    done
fi

if [ "1" == "$DO_IWS" ]; then
    for i in $(qsh -c "JAVA_TOOL_OPTIONS=-Dos400.stdio.convert=N /qibm/proddata/os/webservices/bin/listWebServicesServers.sh |cut -d' ' -f1"); do
        install_iws $i
    done
fi

